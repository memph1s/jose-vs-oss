// Generated by CoffeeScript 1.6.1
(function() {
  var add_button, add_empty_button, load_buttons, load_options, message, save_options,
    _this = this;

  load_options = function() {
    _this.main_div = document.getElementById('options-form');
    return chrome.storage.sync.get("jose.buttons", function(data) {
      var buttons;
      buttons = data["jose.buttons"];
      return load_buttons(buttons);
    });
  };

  load_buttons = function(buttons) {
    var button, _i, _len, _results;
    if (buttons == null) {
      buttons = [];
    }
    _results = [];
    for (_i = 0, _len = buttons.length; _i < _len; _i++) {
      button = buttons[_i];
      _results.push(add_button(button['title'], button['text'], button['closable']));
    }
    return _results;
  };

  add_button = function(title, text, closable) {
    var div, el;
    if (title == null) {
      title = "";
    }
    if (text == null) {
      text = "";
    }
    if (closable == null) {
      closable = false;
    }
    div = document.createElement('div');
    div.setAttribute("class", "button");
    el = document.createElement('label');
    el.innerHTML = "Title:";
    div.appendChild(el);
    el = document.createElement('input');
    el.setAttribute("class", "title");
    el.value = title;
    div.appendChild(el);
    el = document.createElement('textarea');
    el.setAttribute("class", "text");
    el.value = text;
    div.appendChild(el);
    el = document.createElement('input');
    el.setAttribute("class", "closable");
    el.type = 'checkbox';
    el.checked = closable;
    div.appendChild(el);
    el = document.createElement('a');
    el.setAttribute("class", "delete_button");
    el.setAttribute('href', '#');
    el.innerHTML = 'remove';
    div.appendChild(el);
    return _this.main_div.appendChild(div);
  };

  add_empty_button = function() {
    return add_button();
  };

  save_options = function() {
    var b, buttons, closable, node, nodes, text, title, _i, _len;
    buttons = [];
    nodes = $('.button');
    for (_i = 0, _len = nodes.length; _i < _len; _i++) {
      node = nodes[_i];
      title = $(node).find(".title").val();
      text = $(node).find(".text").val();
      closable = $(node).find(".closable").prop('checked');
      b = {
        title: title,
        text: text,
        closable: closable
      };
      buttons.push(b);
    }
    return chrome.storage.sync.set({
      "jose.buttons": buttons
    }, message("Settings saved"));
  };

  message = function(msg) {
    return console.log("options.js - " + msg);
  };

  $(function() {
    load_options();
    $("#add_button").click(function() {
      return add_empty_button();
    });
    $("#save_options").click(function() {
      return save_options();
    });
    return $(document).on('click', '.delete_button', function() {
      $(this).parent().remove();
      return false;
    });
  });

}).call(this);
