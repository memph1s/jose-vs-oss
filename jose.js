// Generated by CoffeeScript 1.6.1
(function() {
  var MutationObserver, button, commentForm, insert_buttons, load_buttons, observer, selectElements,
    _this = this;

  commentForm = document.querySelector('.js-new-comment-form');

  selectElements = function() {
    _this.actions = commentForm.querySelector('.form-actions');
    _this.bubblesContent = document.querySelectorAll('.discussion-bubble.js-comment-container');
    _this.bubble = _this.bubblesContent[_this.bubblesContent.length - 1];
    _this.close = _this.actions.querySelector('.js-comment-and-button');
    _this.comment = _this.actions.querySelector('.primary');
    return _this.textarea = commentForm.querySelector('textarea');
  };

  if (commentForm) {
    selectElements();
    MutationObserver = WebKitMutationObserver || MozMutationObserver;
    observer = new MutationObserver(function(mutations) {
      return mutations.forEach(function(mutation) {
        return selectElements();
      });
    });
    observer.observe(this.actions, {
      childList: true
    });
    button = function(text, innerHtml, closable) {
      var btn;
      if (closable == null) {
        closable = true;
      }
      btn = document.createElement('button');
      btn.innerHTML = text;
      btn.className = 'button';
      btn.setAttribute('tabindex', '1');
      btn.setAttribute('type', 'submit');
      btn.setAttribute('title', innerHtml);
      btn.setAttribute('style', 'margin-right: 4px;');
      btn.addEventListener('click', function(event) {
        event.preventDefault();
        _this.textarea.value = innerHtml;
        if (closable) {
          _this.close.click();
        } else {
          _this.comment.click();
        }
        return _this.textarea.value = '';
      });
      return btn;
    };
    insert_buttons = function() {
      return chrome.storage.sync.get('jose.buttons', function(data) {
        var buttons;
        buttons = data["jose.buttons"];
        return load_buttons(buttons);
      });
    };
    load_buttons = function(buttons) {
      var b, btn, div, _i, _len;
      if (buttons == null) {
        buttons = [];
      }
      div = document.createElement('div');
      div.setAttribute('style', 'float: left; margin: -40px 0px 0px 60px;');
      for (_i = 0, _len = buttons.length; _i < _len; _i++) {
        b = buttons[_i];
        btn = button(b.title, b.text, b.closable);
        div.appendChild(btn);
      }
      return _this.bubble.appendChild(div);
    };
    if (commentForm && this.close) {
      insert_buttons();
    }
  }

}).call(this);
